#!/usr/bin/env sh

NvmUse() {
	export NVM_DIR="$HOME/.nvm"
	NVM_INSTALL_DIR="/usr/local/opt/nvm/"
	. "${NVM_INSTALL_DIR}/nvm.sh"  # This loads nvm
	. "${NVM_INSTALL_DIR}/etc/bash_completion.d/nvm"  # This loads nvm bash_completion
	nvm use
}

SdkManInit() {
	export SDKMAN_DIR="$HOME/.sdkman"
	[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
}

RBInit() {
	eval "$(rbenv init - zsh)"
}

source ~/dotfiles/bin/clone

function vpn-up() {
  local VPN_HOST=sslvpngwgec.wal-mart.com/Walmart_Associate_MAC_Yubi
  #local VPN_HOST=http://sslvpngwwec.wal-mart.com/Walmart_Associate_Yubi
  local VPN_USER=$(whoami) #for openconnect

  if [ ! -f ~/.vpn_password ]; then
    echo "Error: missing ~/.vpn_password"
    return
  fi
  echo "Starting the vpn ..."
  echo "\n$(cat ~/.vpn_password)\n$(2fa walmart)\ny" | /opt/cisco/anyconnect/bin/vpn -s connect $VPN_HOST $@

  #echo "$(cat ~/.vpn_password)\n$(2fa walmart)" | sudo openconnect --passwd-on-stdin --user=$VPN_USER $VPN_HOST $@ # for openconnect
}

function vpn-down() {
  #sudo kill -2 `pgrep openconnect` # for openconncet
  /opt/cisco/anyconnect/bin/vpn disconnect
}

function sudome() {
  set -x
  sudo jamf policy -id 854
  set +x
}
