#!/usr/bin/env sh

# TODO: rewrite in dash-compatible way
NvmUse() {
	export NVM_DIR="$HOME/.nvm"
	NVM_INSTALL_DIR="/usr/local/opt/nvm/"
	. "${NVM_INSTALL_DIR}/nvm.sh"  # This loads nvm
	. "${NVM_INSTALL_DIR}/bash_completion"  # This loads nvm bash_completion
	nvm use $@
}

SdkManInit() {
	export SDKMAN_DIR="$HOME/.sdkman"
	[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
}

RBInit() {
	eval "$(rbenv init - zsh)"
}

tea-magic() {
	[[ -d "$HOME/.tea" ]] && source <("$HOME/.tea/tea.xyz/v*/bin/tea" --magic)
}

source ~/dotfiles/bin/clone

function vpn-up() {
  local VPN_HOST=sslvpngwgec.wal-mart.com/Walmart_Associate_MAC_Yubi
  #local VPN_HOST=http://sslvpngwwec.wal-mart.com/Walmart_Associate_Yubi
  #local VPN_HOST=http://sslvpngw.wal-mart.com/Walmart_Associate_Yubi
  local VPN_USER=$(whoami) #for openconnect

  echo "Starting the vpn ..."
  local vpn_password="$(security find-generic-password -w -s 'wmt-sso' -a $VPN_USER)"
  local mfa_code="$(2fa walmart)"
  printf "\n${vpn_password}\n${mfa_code}\ny" | /opt/cisco/anyconnect/bin/vpn -s connect $VPN_HOST $@

  #echo "$(cat ~/.vpn_password)\n$(2fa walmart)" | sudo openconnect --passwd-on-stdin --user=$VPN_USER $VPN_HOST $@ # for openconnect
}

function vpn-down() {
  #sudo kill -2 `pgrep openconnect` # for openconncet
  /opt/cisco/anyconnect/bin/vpn disconnect
}

function sudome() {
  set -x
  sudo jamf policy -id 854
  set +x
}

function afk() {
  echo "set i to 0
  repeat while i < 20
  tell application \"System Events\" to key code 80
  set i to i + 1
  delay 180
end repeat" | osascript
}

function vo() {
	vim $(fd | fzf)
}
